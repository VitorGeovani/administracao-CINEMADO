/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import java.sql.ResultSet;
import java.sql.SQLException;

import javax.swing.JOptionPane;
/**
 *
 * @author gabrielle.ddutra
 */
public class Avaliacao extends javax.swing.JFrame {
    // Variáveis para armazenar os detalhes do filme
    private String tituloFilme;
    private String diretorFilme;
    private String generoFilme;
    private String duracaoFilme;
    private String dataFilme;
    private String classificacaoFilme;
    private static int idFilme;

    // Adicione essas declarações de campo à classe Avaliacao
    private javax.swing.JTextField txtGenero;
    private javax.swing.JTextField txtClassificacao;

    // Método para preencher os campos com os detalhes do filme
    private void preencherCamposFilme() {
        txtTitulo.setText(tituloFilme);
        txtDiretor.setText(diretorFilme);
        txtGenero.setText(generoFilme);
        txtDuracao.setText(duracaoFilme);
        txtData.setText(dataFilme);
        txtClassificacao.setText(classificacaoFilme);
        // Desabilitar campos de filme para edição
        txtTitulo.setEnabled(false);
        txtDiretor.setEnabled(false);
        txtGenero.setEnabled(false);
        txtDuracao.setEnabled(false);
        txtData.setEnabled(false);
        txtClassificacao.setEnabled(false);
    }

    /**
     * Creates new form Avaliacao
     */
    public Avaliacao(int idFilme) {
        this.idFilme = idFilme;
        initComponents();
        // Carregar detalhes do filme com base no ID fornecido
        carregarDetalhesFilme();
    }

    // Método para carregar os detalhes do filme com base no ID
    private void carregarDetalhesFilme() {
        try {
            appData app = new appData();
            ResultSet resultado = app.avaliarFilme(idFilme);
            if (resultado.next()) {
                // Extrair detalhes do filme do ResultSet
                tituloFilme = resultado.getString("titulo");
                diretorFilme = resultado.getString("diretor");
                generoFilme = resultado.getString("genero");
                duracaoFilme = resultado.getString("duracao");
                dataFilme = resultado.getString("data_lancamento");
                classificacaoFilme = resultado.getString("classificacao_indicativa");
                // Preencher automaticamente os campos com os detalhes do filme
                preencherCamposFilme();
                // Habilitar campos de avaliação para edição
                txtCinematografia.setEnabled(true);
                txtOriginalidade.setEnabled(true);
                txtComentario.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(null, "Filme não encontrado.");
                dispose(); // Fechar a janela de avaliação se o filme não for encontrado
            }
        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao buscar detalhes do filme: " + e.getMessage());
            dispose(); // Fechar a janela de avaliação em caso de erro
        }
    }

    // public Avaliacao(String titulo, String diretor, String genero, String duracao, String data, String classificacao) {
    //     initComponents();
    //     txtTitulo.setText(titulo);
    //     txtDiretor.setText(diretor);
    //     txtDuracao.setText(duracao);
    //     txtData.setText(data);
    //     cnbGenero.setSelectedItem(genero);
    //     cnbClassificacao.setSelectedItem(classificacao);
    //     txtTitulo.setEnabled(false);
    //     txtDiretor.setEnabled(false);
    //     txtDuracao.setEnabled(false);
    //     txtData.setEnabled(false);
    //     cnbGenero.setEnabled(false);
    //     cnbClassificacao.setEnabled(false);
    // }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtDuracao = new javax.swing.JTextField();
        txtTitulo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtDiretor = new javax.swing.JTextField();
        cnbGenero = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtData = new javax.swing.JTextField();
        cnbClassificacao = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        txtTitulo1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtCinematografia = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtOriginalidade = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtComentario = new javax.swing.JTextField();
        btnEnviarAvaliacao = new javax.swing.JButton();
        txtGenero = new javax.swing.JTextField();
        txtClassificacao = new javax.swing.JTextField();
        

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Avaliação do filme");
        getContentPane().setLayout(null);

        jLabel1.setText("Duração:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(60, 150, 110, 30);

        jLabel2.setText("Título do Filme:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(60, 30, 100, 30);

        txtDuracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDuracaoActionPerformed(evt);
            }
        });
        getContentPane().add(txtDuracao);
        txtDuracao.setBounds(120, 150, 300, 30);
        getContentPane().add(txtTitulo);
        txtTitulo.setBounds(150, 30, 270, 30);

        jLabel3.setText("Gênero:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(60, 110, 110, 30);

        jLabel4.setText("Diretor:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(60, 70, 110, 30);

        txtDiretor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiretorActionPerformed(evt);
            }
        });
        getContentPane().add(txtDiretor);
        txtDiretor.setBounds(120, 70, 300, 30);

        cnbGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Romance", "Aventura", "Suspense", "Terror/Horror", "Ação", "Documentário", "Ficção científica", "Drama", "Comédia", "Fantasia", "Musical", "Mistério" }));
        cnbGenero.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cnbGeneroItemStateChanged(evt);
            }
        });
        getContentPane().add(cnbGenero);
        cnbGenero.setBounds(120, 110, 300, 30);

        jLabel5.setText("Data Lançamento:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(60, 190, 110, 30);

        jLabel7.setText("Classificação indicativa:");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(60, 230, 130, 30);

        txtData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataActionPerformed(evt);
            }
        });
        getContentPane().add(txtData);
        txtData.setBounds(190, 190, 230, 30);

        cnbClassificacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Livre", "10 anos", "12 anos", "14 anos", "16 anos", "18 anos" }));
        getContentPane().add(cnbClassificacao);
        cnbClassificacao.setBounds(190, 230, 230, 30);

        jLabel6.setText("Título do Filme:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(60, 30, 100, 30);
        getContentPane().add(txtTitulo1);
        txtTitulo1.setBounds(150, 30, 270, 30);

        jLabel8.setText("Cinematografia:");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(60, 270, 100, 30);
        getContentPane().add(txtCinematografia);
        txtCinematografia.setBounds(150, 270, 270, 30);

        jLabel9.setText("Originalidade:");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(60, 310, 100, 30);
        getContentPane().add(txtOriginalidade);
        txtOriginalidade.setBounds(150, 310, 270, 30);

        jLabel10.setText("Comentário Técnico:");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(60, 350, 150, 30);
        getContentPane().add(txtComentario);
        txtComentario.setBounds(180, 350, 240, 90);

        btnEnviarAvaliacao.setText("Enviar avaliação");
        btnEnviarAvaliacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    btnEnviarAvaliacaoActionPerformed(evt);
                } catch (ClassNotFoundException | SQLException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
            }
        });
        getContentPane().add(btnEnviarAvaliacao);
        btnEnviarAvaliacao.setBounds(200, 460, 190, 40);

        setSize(new java.awt.Dimension(557, 542));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtDuracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDuracaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDuracaoActionPerformed

    private void txtDiretorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiretorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiretorActionPerformed

    private void cnbGeneroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cnbGeneroItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cnbGeneroItemStateChanged

    private void txtDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataActionPerformed

    private void btnEnviarAvaliacaoActionPerformed(java.awt.event.ActionEvent evt) throws ClassNotFoundException, SQLException {
        try {
            // Solicitar ao usuário que insira o ID do filme
            int idFilme = Integer.parseInt(JOptionPane.showInputDialog("Digite o ID do filme que deseja avaliar:"));
            // Buscar detalhes do filme com base no ID fornecido
            appData app = new appData();
            ResultSet resultado = app.avaliarFilme(idFilme);
            if (resultado.next()) {
                // Extrair detalhes do filme do ResultSet
                tituloFilme = resultado.getString("titulo");
                diretorFilme = resultado.getString("diretor");
                generoFilme = resultado.getString("genero");
                duracaoFilme = resultado.getString("duracao");
                dataFilme = resultado.getString("data_lancamento");
                classificacaoFilme = resultado.getString("classificacao_indicativa");
                // Preencher automaticamente os campos com os detalhes do filme
                preencherCamposFilme();
                // Habilitar campos de avaliação para edição
                txtCinematografia.setEnabled(true);
                txtOriginalidade.setEnabled(true);
                txtComentario.setEnabled(true);
                
                // Capturar os valores dos campos de avaliação
                String cinematografia = txtCinematografia.getText();
                String originalidade = txtOriginalidade.getText();
                String comentarioTecnico = txtComentario.getText();
                
                // Submeter a avaliação
                app.submeterAvaliacao(idFilme, cinematografia, originalidade, comentarioTecnico);
                
                JOptionPane.showMessageDialog(null, "Avaliação enviada com sucesso!");
            } else {
                JOptionPane.showMessageDialog(null, "Filme não encontrado.");
            }
        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao buscar detalhes do filme: " + e.getMessage());
        }
    }
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Avaliacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Avaliacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Avaliacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Avaliacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Avaliacao(idFilme).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEnviarAvaliacao;
    private javax.swing.JComboBox<String> cnbClassificacao;
    private javax.swing.JComboBox<String> cnbGenero;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtCinematografia;
    private javax.swing.JTextField txtComentario;
    private javax.swing.JTextField txtData;
    private javax.swing.JTextField txtDiretor;
    private javax.swing.JTextField txtDuracao;
    private javax.swing.JTextField txtOriginalidade;
    private javax.swing.JTextField txtTitulo;
    private javax.swing.JTextField txtTitulo1;
    // End of variables declaration//GEN-END:variables
}